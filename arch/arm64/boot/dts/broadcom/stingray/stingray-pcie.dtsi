/*
 *  BSD LICENSE
 *
 *  Copyright(c) 2016-2017 Broadcom.  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in
 *      the documentation and/or other materials provided with the
 *      distribution.
 *    * Neither the name of Broadcom nor the names of its
 *      contributors may be used to endorse or promote products derived
 *      from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#if (NUM_PAXB == 8)
#define ENABLE_PCIE0	1
#define ENABLE_PCIE1	1
#define ENABLE_PCIE2	1
#define ENABLE_PCIE3	1
#define ENABLE_PCIE4	1
#define ENABLE_PCIE5	1
#define ENABLE_PCIE6	1
#define ENABLE_PCIE7	1
#endif

#if (NUM_PAXB == 1)
#define ENABLE_PCIE1	1
#endif

	pcie0: pcie@48000000 {
		compatible = "brcm,iproc-pcie-paxb-v2";
		reg = <0 0x48000000 0 0x4000>;

		interrupt-controller;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 7>;
		interrupt-map = <0 0 0 0 1 &pcie0 1>,
				<0 0 0 0 2 &pcie0 2>,
				<0 0 0 0 3 &pcie0 3>,
				<0 0 0 0 4 &pcie0 4>;
		interrupts = <GIC_SPI 420 IRQ_TYPE_NONE>;

		linux,pci-domain = <0>;

		bus-range = <0x0 0xff>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x00000000 0x4 0x0 0 0x80000000>;

		brcm,pcie-ob;
		brcm,pcie-ob-axi-offset = <0x00000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0x040 0x8>,
			  <0x200 &gic_its 0x080 0x8>,
			  <0x300 &gic_its 0x0c0 0x8>,
			  <0x400 &gic_its 0x100 0x8>,
			  <0x500 &gic_its 0x140 0x8>,
			  <0x600 &gic_its 0x180 0x8>,
			  <0x700 &gic_its 0x1c0 0x8>,
			  <0x800 &gic_its 0x200 0x8>,
			  <0x900 &gic_its 0x240 0x8>,
			  <0xa00 &gic_its 0x280 0x8>,
			  <0xb00 &gic_its 0x2c0 0x8>,
			  <0xc00 &gic_its 0x300 0x8>,
			  <0xd00 &gic_its 0x340 0x8>,
			  <0xe00 &gic_its 0x380 0x8>,
			  <0xf00 &gic_its 0x3c0 0x8>;

#if (ENABLE_PAXB_IOMMU == 1)
		iommu-map = <0x100 &smmu 0x040 0x8>;
#endif

		phys = <&pcie_phy 0>;
		phy-names = "pcie-phy";

#if (ENABLE_PCIE0 == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pcie1: pcie@48004000 {
		compatible = "brcm,iproc-pcie-paxb-v2";
		reg = <0 0x48004000 0 0x4000>;

		interrupt-controller;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 7>;
		interrupt-map = <0 0 0 0 1 &pcie1 1>,
				<0 0 0 0 2 &pcie1 2>,
				<0 0 0 0 3 &pcie1 3>,
				<0 0 0 0 4 &pcie1 4>;
		interrupts = <GIC_SPI 426 IRQ_TYPE_NONE>;

		linux,pci-domain = <1>;

		bus-range = <0x0 0xff>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x00000000 0x4 0x80000000 0 0x80000000>;

		brcm,pcie-ob;
		brcm,pcie-ob-axi-offset = <0x00000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0x440 0x8>,
			  <0x200 &gic_its 0x480 0x8>,
			  <0x300 &gic_its 0x4c0 0x8>,
			  <0x400 &gic_its 0x500 0x8>,
			  <0x500 &gic_its 0x540 0x8>,
			  <0x600 &gic_its 0x580 0x8>,
			  <0x700 &gic_its 0x5c0 0x8>,
			  <0x800 &gic_its 0x600 0x8>,
			  <0x900 &gic_its 0x640 0x8>,
			  <0xa00 &gic_its 0x680 0x8>,
			  <0xb00 &gic_its 0x6c0 0x8>,
			  <0xc00 &gic_its 0x700 0x8>,
			  <0xd00 &gic_its 0x740 0x8>,
			  <0xe00 &gic_its 0x780 0x8>,
			  <0xf00 &gic_its 0x7c0 0x8>;

#if (ENABLE_PAXB_IOMMU == 1)
		iommu-map = <0x100 &smmu 0x440 0x8>;
#endif

		phys = <&pcie_phy 1>;
		phy-names = "pcie-phy";

#if (ENABLE_PCIE1 == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pcie2: pcie@48008000 {
		compatible = "brcm,iproc-pcie-paxb-v2";
		reg = <0 0x48008000 0 0x4000>;

		interrupt-controller;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 7>;
		interrupt-map = <0 0 0 0 1 &pcie2 1>,
				<0 0 0 0 2 &pcie2 2>,
				<0 0 0 0 3 &pcie2 3>,
				<0 0 0 0 4 &pcie2 4>;
		interrupts = <GIC_SPI 432 IRQ_TYPE_NONE>;

		linux,pci-domain = <2>;

		bus-range = <0x0 0xff>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x00000000 0x5 0x0 0 0x80000000>;

		brcm,pcie-ob;
		brcm,pcie-ob-axi-offset = <0x00000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0x840 0x8>,
			  <0x200 &gic_its 0x880 0x8>,
			  <0x300 &gic_its 0x8c0 0x8>,
			  <0x400 &gic_its 0x900 0x8>,
			  <0x500 &gic_its 0x940 0x8>,
			  <0x600 &gic_its 0x980 0x8>,
			  <0x700 &gic_its 0x9c0 0x8>,
			  <0x800 &gic_its 0xa00 0x8>,
			  <0x900 &gic_its 0xa40 0x8>,
			  <0xa00 &gic_its 0xa80 0x8>,
			  <0xb00 &gic_its 0xac0 0x8>,
			  <0xc00 &gic_its 0xb00 0x8>,
			  <0xd00 &gic_its 0xb40 0x8>,
			  <0xe00 &gic_its 0xb80 0x8>,
			  <0xf00 &gic_its 0xbc0 0x8>;

#if (ENABLE_PAXB_IOMMU == 1)
		iommu-map = <0x100 &smmu 0x840 0x8>;
#endif

		phys = <&pcie_phy 2>;
		phy-names = "pcie-phy";

#if (ENABLE_PCIE2 == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pcie3: pcie@4800c000 {
		compatible = "brcm,iproc-pcie-paxb-v2";
		reg = <0 0x4800c000 0 0x4000>;

		interrupt-controller;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 7>;
		interrupt-map = <0 0 0 0 1 &pcie3 1>,
				<0 0 0 0 2 &pcie3 2>,
				<0 0 0 0 3 &pcie3 3>,
				<0 0 0 0 4 &pcie3 4>;
		interrupts = <GIC_SPI 438 IRQ_TYPE_NONE>;

		linux,pci-domain = <3>;

		bus-range = <0x0 0xff>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x00000000 0x5 0x80000000 0 0x80000000>;

		brcm,pcie-ob;
		brcm,pcie-ob-axi-offset = <0x00000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0xc40 0x8>,
			  <0x200 &gic_its 0xc80 0x8>,
			  <0x300 &gic_its 0xcc0 0x8>,
			  <0x400 &gic_its 0xd00 0x8>,
			  <0x500 &gic_its 0xd40 0x8>,
			  <0x600 &gic_its 0xd80 0x8>,
			  <0x700 &gic_its 0xdc0 0x8>,
			  <0x800 &gic_its 0xe00 0x8>,
			  <0x900 &gic_its 0xe40 0x8>,
			  <0xa00 &gic_its 0xe80 0x8>,
			  <0xb00 &gic_its 0xec0 0x8>,
			  <0xc00 &gic_its 0xf00 0x8>,
			  <0xd00 &gic_its 0xf40 0x8>,
			  <0xe00 &gic_its 0xf80 0x8>,
			  <0xf00 &gic_its 0xfc0 0x8>;

#if (ENABLE_PAXB_IOMMU == 1)
		iommu-map = <0x100 &smmu 0xc40 0x8>;
#endif

		phys = <&pcie_phy 3>;
		phy-names = "pcie-phy";

#if (ENABLE_PCIE3 == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pcie4: pcie@48010000 {
		compatible = "brcm,iproc-pcie-paxb-v2";
		reg = <0 0x48010000 0 0x4000>;

		interrupt-controller;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 7>;
		interrupt-map = <0 0 0 0 1 &pcie4 1>,
				<0 0 0 0 2 &pcie4 2>,
				<0 0 0 0 3 &pcie4 3>,
				<0 0 0 0 4 &pcie4 4>;
		interrupts = <GIC_SPI 444 IRQ_TYPE_NONE>;

		linux,pci-domain = <4>;

		bus-range = <0x0 0xff>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x00000000 0x6 0x0 0 0x80000000>;

		brcm,pcie-ob;
		brcm,pcie-ob-axi-offset = <0x00000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0x1040 0x8>,
			  <0x200 &gic_its 0x1080 0x8>,
			  <0x300 &gic_its 0x10c0 0x8>,
			  <0x400 &gic_its 0x1100 0x8>,
			  <0x500 &gic_its 0x1140 0x8>,
			  <0x600 &gic_its 0x1180 0x8>,
			  <0x700 &gic_its 0x11c0 0x8>,
			  <0x800 &gic_its 0x1200 0x8>,
			  <0x900 &gic_its 0x1240 0x8>,
			  <0xa00 &gic_its 0x1280 0x8>,
			  <0xb00 &gic_its 0x12c0 0x8>,
			  <0xc00 &gic_its 0x1300 0x8>,
			  <0xd00 &gic_its 0x1340 0x8>,
			  <0xe00 &gic_its 0x1380 0x8>,
			  <0xf00 &gic_its 0x13c0 0x8>;

#if (ENABLE_PAXB_IOMMU == 1)
		iommu-map = <0x100 &smmu 0x1040 0x8>;
#endif

		phys = <&pcie_phy 4>;
		phy-names = "pcie-phy";

#if (ENABLE_PCIE4 == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pcie5: pcie@48014000 {
		compatible = "brcm,iproc-pcie-paxb-v2";
		reg = <0 0x48014000 0 0x4000>;

		interrupt-controller;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 7>;
		interrupt-map = <0 0 0 0 1 &pcie5 1>,
				<0 0 0 0 2 &pcie5 2>,
				<0 0 0 0 3 &pcie5 3>,
				<0 0 0 0 4 &pcie5 4>;
		interrupts = <GIC_SPI 450 IRQ_TYPE_NONE>;

		linux,pci-domain = <5>;

		bus-range = <0x0 0xff>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x00000000 0x6 0x80000000 0 0x80000000>;

		brcm,pcie-ob;
		brcm,pcie-ob-axi-offset = <0x00000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0x1440 0x8>,
			  <0x200 &gic_its 0x1480 0x8>,
			  <0x300 &gic_its 0x14c0 0x8>,
			  <0x400 &gic_its 0x1500 0x8>,
			  <0x500 &gic_its 0x1540 0x8>,
			  <0x600 &gic_its 0x1580 0x8>,
			  <0x700 &gic_its 0x15c0 0x8>,
			  <0x800 &gic_its 0x1600 0x8>,
			  <0x900 &gic_its 0x1640 0x8>,
			  <0xa00 &gic_its 0x1680 0x8>,
			  <0xb00 &gic_its 0x16c0 0x8>,
			  <0xc00 &gic_its 0x1700 0x8>,
			  <0xd00 &gic_its 0x1740 0x8>,
			  <0xe00 &gic_its 0x1780 0x8>,
			  <0xf00 &gic_its 0x17c0 0x8>;


#if (ENABLE_PAXB_IOMMU == 1)
		iommu-map = <0x100 &smmu 0x1440 0x8>;
#endif

		phys = <&pcie_phy 5>;
		phy-names = "pcie-phy";

#if (ENABLE_PCIE5 == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pcie6: pcie@48018000 {
		compatible = "brcm,iproc-pcie-paxb-v2";
		reg = <0 0x48018000 0 0x4000>;

		interrupt-controller;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 7>;
		interrupt-map = <0 0 0 0 1 &pcie6 1>,
				<0 0 0 0 2 &pcie6 2>,
				<0 0 0 0 3 &pcie6 3>,
				<0 0 0 0 4 &pcie6 4>;
		interrupts = <GIC_SPI 456 IRQ_TYPE_NONE>;

		linux,pci-domain = <6>;

		bus-range = <0x0 0xff>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x00000000 0x7 0x0 0 0x80000000>;

		brcm,pcie-ob;
		brcm,pcie-ob-axi-offset = <0x00000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0x1840 0x8>,
			  <0x200 &gic_its 0x1880 0x8>,
			  <0x300 &gic_its 0x18c0 0x8>,
			  <0x400 &gic_its 0x1900 0x8>,
			  <0x500 &gic_its 0x1940 0x8>,
			  <0x600 &gic_its 0x1980 0x8>,
			  <0x700 &gic_its 0x19c0 0x8>,
			  <0x800 &gic_its 0x1a00 0x8>,
			  <0x900 &gic_its 0x1a40 0x8>,
			  <0xa00 &gic_its 0x1a80 0x8>,
			  <0xb00 &gic_its 0x1ac0 0x8>,
			  <0xc00 &gic_its 0x1b00 0x8>,
			  <0xd00 &gic_its 0x1b40 0x8>,
			  <0xe00 &gic_its 0x1b80 0x8>,
			  <0xf00 &gic_its 0x1bc0 0x8>;

#if (ENABLE_PAXB_IOMMU == 1)
		iommu-map = <0x100 &smmu 0x1840 0x8>;
#endif

		phys = <&pcie_phy 6>;
		phy-names = "pcie-phy";

#if (ENABLE_PCIE6 == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pcie7: pcie@4801c000 {
		compatible = "brcm,iproc-pcie-paxb-v2";
		reg = <0 0x4801c000 0 0x4000>;

		interrupt-controller;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 7>;
		interrupt-map = <0 0 0 0 1 &pcie7 1>,
				<0 0 0 0 2 &pcie7 2>,
				<0 0 0 0 3 &pcie7 3>,
				<0 0 0 0 4 &pcie7 4>;
		interrupts = <GIC_SPI 462 IRQ_TYPE_NONE>;

		linux,pci-domain = <7>;

		bus-range = <0x0 0xff>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x00000000 0x7 0x80000000 0 0x80000000>;

		brcm,pcie-ob;
		brcm,pcie-ob-axi-offset = <0x00000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0x1c40 0x8>,
			  <0x200 &gic_its 0x1c80 0x8>,
			  <0x300 &gic_its 0x1cc0 0x8>,
			  <0x400 &gic_its 0x1d00 0x8>,
			  <0x500 &gic_its 0x1d40 0x8>,
			  <0x600 &gic_its 0x1d80 0x8>,
			  <0x700 &gic_its 0x1dc0 0x8>,
			  <0x800 &gic_its 0x1e00 0x8>,
			  <0x900 &gic_its 0x1e40 0x8>,
			  <0xa00 &gic_its 0x1e80 0x8>,
			  <0xb00 &gic_its 0x1ec0 0x8>,
			  <0xc00 &gic_its 0x1f00 0x8>,
			  <0xd00 &gic_its 0x1f40 0x8>,
			  <0xe00 &gic_its 0x1f80 0x8>,
			  <0xf00 &gic_its 0x1fc0 0x8>;

#if (ENABLE_PAXB_IOMMU == 1)
		iommu-map = <0x100 &smmu 0x1c40 0x8>;
#endif

		phys = <&pcie_phy 7>;
		phy-names = "pcie-phy";

#if (ENABLE_PCIE7 == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pcie8: pcie@60400000 {
		compatible = "brcm,iproc-pcie-paxc-v2";
		reg = <0 0x60400000 0 0x1000>;
		linux,pci-domain = <8>;

		bus-range = <0x0 0x1>;

		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x83000000 0 0x10000000 0 0x10000000 0 0x20000000>;

#if (USE_DDR == 1)
		dma-coherent;
#endif

		msi-map = <0x100 &gic_its 0x2000 0x1>,
			  <0x101 &gic_its 0x2080 0x1>,
			  <0x102 &gic_its 0x2100 0x1>,
			  <0x103 &gic_its 0x2180 0x1>,
			  <0x104 &gic_its 0x2200 0x1>,
			  <0x105 &gic_its 0x2280 0x1>,
			  <0x106 &gic_its 0x2300 0x1>,
			  <0x107 &gic_its 0x2380 0x1>;

		phys = <&pcie_phy 8>;
		phy-names = "pcie-phy";

#if (ENABLE_PAXC == 1)
		status = "okay";
#else
		status = "disabled";
#endif
	};

	pmi-bus {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <1>;

		pcie_phy: phy {
			compatible = "brcm,sr-pcie-phy";
			brcm,sr-cdru = <&cdru>;
			brcm,sr-mhb = <&mhb>;
			#phy-cells = <1>;
		};
	};
