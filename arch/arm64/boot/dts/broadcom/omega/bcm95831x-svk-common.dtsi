/*
 *  BSD LICENSE
 *
 *  Copyright(c) 2018 Broadcom.  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in
 *      the documentation and/or other materials provided with the
 *      distribution.
 *    * Neither the name of Broadcom nor the names of its
 *      contributors may be used to endorse or promote products derived
 *      from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#include "bcmlcddc.dtsi"

/ {
	chosen {
	};

	sound {
		compatible = "brcm,omega-svk-machine";
		status = "okay";

		brcm,audio-routing =
			/* Outputs */
			"SVK Handsfree", "LSPK_OUT",
			"SVK Handset Earpiece", "EP_OUT",
			"SVK Headphone jack", "HS_OUT_L",
			"SVK Headphone jack", "HS_OUT_R",

			/* Inputs */
			"AMIC1", "SVK Analog Mic1",
			"AUXMIC1", "SVK Analog Mic2",
			"AMIC3",  "SVK Analog Mic3",
			"DMIC1", "SVK Digital Mic1",
			"DMIC2", "SVK Digital Mic2",
			"DMIC3", "SVK Digital Mic3",
			"DMIC4", "SVK Digital Mic4";

		link0 {
			format = "i2s";
			bitclock-master = <&dailink0_master>;
			frame-master = <&dailink0_master>;

			dailink0_master: cpu {
				sound-dai = <&omega_audio 0>;
			};

			codec {
				sound-dai = <&bcm_dummy_codec>;
			};
		};

		link1 {
			format = "i2s";
			bitclock-master = <&dailink1_master>;
			frame-master = <&dailink1_master>;

			dailink1_master: cpu {
				sound-dai = <&omega_audio 1>;
			};

			codec {
				sound-dai = <&bcm_dummy_codec>;
			};
		};

		link2 {
			format = "dsp_a";
			bitclock-master = <&dailink2_master>;
			frame-master = <&dailink2_master>;

			brcm,transfer_mode = <1>;
			brcm,slave_mode = <1>;
			brcm,tdm_framesize = <256>;
			brcm,slot_size = <32>;

			cpu {
				sound-dai = <&omega_audio 2>;
			};

			dailink2_master: codec {
				sound-dai = <&omega_codec 0>;
			};
		};

		link3 {
			format = "i2s";
			bitclock-master = <&dailink3_master>;
			frame-master = <&dailink3_master>;

			dailink3_master: cpu {
				sound-dai = <&omega_audio 3>;
			};

			codec {
				sound-dai = <&spdif_dummy_tx>;
			};
		};
	};

	bcm_dummy_codec: dummy_codec {
		#sound-dai-cells = <0>;
		status = "okay";
		compatible = "brcm,dummy_codec";
	};

	/* dummy codec to model spdif tx */
	spdif_dummy_tx: spdif_tx {
		#sound-dai-cells = <0>;
		status = "okay";
		compatible = "linux,spdif-dit";
	};
};

&omega_codec {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&digmic0_pins &digmic1_pins>;
};

&omega_audio {
	#sound-dai-cells = <1>;

	pinctrl-names = "default";
	pinctrl-0 = <&i2s0_pins &i2s1_mfio070_pins>;

	assigned-clocks = <&audiopll_1 BCM_OMEGA_AUDIOPLL>,
			  <&ssp0_clock>,
			  <&ssp1_clock>,
			  <&ssp2_clock>,
			  <&spdiftx_clock>;
	assigned-clock-rates = <1376255989>;
	assigned-clock-parents = <0>,
			<&audiopll_1 BCM_OMEGA_AUDIOPLL_CH0>,
			<&audiopll_1 BCM_OMEGA_AUDIOPLL_CH1>,
			<&audiopll_1 BCM_OMEGA_AUDIOPLL_CH2>,
			<&audiopll_1 BCM_OMEGA_AUDIOPLL_CH3>;

	ssp0: ssp_port@0 {
		status = "okay";
	};

	ssp1: ssp_port@1 {
		status = "okay";
	};

	ssp2: ssp_port@2 {
		status = "okay";
	};

	spdif: spdif_port@3 {
		status = "okay";
	};
};

&uart0 {
	clock-frequency = <25000000>;
	status = "okay";
};

&nand {
	nandcs@0 {
		compatible = "brcm,nandcs";
		reg = <0>;
		nand-ecc-mode = "hw";
		nand-ecc-strength = <8>;
		nand-ecc-step-size = <512>;
		nand-bus-width = <8>;
		brcm,nand-oob-sector-size = <16>;
		#address-cells = <1>;
		#size-cells = <1>;
	};
};

&clcd {
	status = "okay";
	port {
		clcd_pads: endpoint {
			remote-endpoint = <&clcd_panel>;
			arm,pl11x,tft-r0g0b0-pads = <0 8 16>;
		};
	};

	panel {
		compatible = "panel-dpi";
		port {
			clcd_panel: endpoint {
				remote-endpoint = <&clcd_pads>;
			};
		};
	};
};

&mdio_mux {
	status = "okay";
};

&eth0 {
	brcm,amac-switch-bypass;
	phy-handle = <&gphy0>;
	phy-mode = "gmii";
	status = "okay";
};
