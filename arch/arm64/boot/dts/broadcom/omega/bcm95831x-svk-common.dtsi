// SPDX-License-Identifier: (GPL-2.0 or BSD-3-Clause)
/*
 *  Copyright(c) 2018 Broadcom
 */
#include "bcmlcddc.dtsi"

/ {
	sound {
		compatible = "brcm,omega-svk-machine";
		status = "okay";

		brcm,audio-routing =
			/* Outputs */
			"SVK Handsfree", "LSPK_OUT",
			"SVK Handset Earpiece", "EP_OUT",
			"SVK Headset Speaker", "EP_OUT2",
			"SVK Headphone jack", "HS_OUT_L",
			"SVK Headphone jack", "HS_OUT_R",

			/* Inputs */
			"AMIC1", "SVK Analog Mic1",
			"AUXMIC1", "SVK Analog Mic2",
			"AMIC3",  "SVK Analog Mic3",
			"DMIC1", "SVK Digital Mic1",
			"DMIC2", "SVK Digital Mic2",
			"DMIC3", "SVK Digital Mic3",
			"DMIC4", "SVK Digital Mic4";

		link0 {
			format = "i2s";
			bitclock-master = <&dailink0_master>;
			frame-master = <&dailink0_master>;

			dailink0_master: cpu {
				sound-dai = <&omega_audio 0>;
			};

			codec {
				sound-dai = <&bcm_dummy_codec>;
			};
		};

		link1 {
			format = "i2s";
			bitclock-master = <&dailink1_master>;
			frame-master = <&dailink1_master>;

			dailink1_master: cpu {
				sound-dai = <&omega_audio 1>;
			};

			codec {
				sound-dai = <&bcm_dummy_codec>;
			};
		};

		link2 {
			format = "dsp_a";
			bitclock-master = <&dailink2_master>;
			frame-master = <&dailink2_master>;

			brcm,transfer_mode = <1>;
			brcm,slave_mode = <1>;
			brcm,tdm_framesize = <256>;
			brcm,slot_size = <32>;

			cpu {
				sound-dai = <&omega_audio 2>;
			};

			dailink2_master: codec {
				sound-dai = <&omega_codec 0>;
			};
		};

		link3 {
			format = "i2s";
			bitclock-master = <&dailink3_master>;
			frame-master = <&dailink3_master>;

			dailink3_master: cpu {
				sound-dai = <&omega_audio 3>;
			};

			codec {
				sound-dai = <&spdif_dummy_tx>;
			};
		};
	};

	bcm_dummy_codec: dummy_codec {
		#sound-dai-cells = <0>;
		status = "okay";
		compatible = "brcm,dummy_codec";
	};

	/* dummy codec to model spdif tx */
	spdif_dummy_tx: spdif_tx {
		#sound-dai-cells = <0>;
		status = "okay";
		compatible = "linux,spdif-dit";
	};

	vdd_reg: regulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vdd-reg";
		gpio = <&gpio_crmu 0 0>;
		enable-active-high;
		regulator-always-on;
		startup-delay-us = <1000>;
		status = "okay";
	};
};

&i2c0 {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_mfio043_pins>;
};

&i2c1 {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_mfio045_pins>;
};

&omega_codec {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&digmic0_pins &digmic1_pins>;
};

&omega_audio {
	#sound-dai-cells = <1>;

	pinctrl-names = "default";
	pinctrl-0 = <&i2s0_pins &i2s1_mfio070_pins
		     &i2s0_pad_ctrl &i2s1_mfio70_pad_ctrl>;

	assigned-clocks = <&audiopll_1 BCM_OMEGA_AUDIOPLL>,
			  <&ssp0_clock>,
			  <&ssp1_clock>,
			  <&ssp2_clock>,
			  <&spdiftx_clock>;
	assigned-clock-rates = <3612672000>;
	assigned-clock-parents = <0>,
				 <&audiopll_1 BCM_OMEGA_AUDIOPLL_CH1>,
				 <&audiopll_1 BCM_OMEGA_AUDIOPLL_CH2>,
				 <&audiopll_1 BCM_OMEGA_AUDIOPLL_CH3>,
				 <&audiopll_1 BCM_OMEGA_AUDIOPLL_CH4>;

	ssp0: ssp_port@0 {
		status = "okay";
	};

	ssp1: ssp_port@1 {
		status = "okay";
	};

	ssp2: ssp_port@2 {
		status = "okay";
	};

	spdif: spdif_port@3 {
		status = "okay";
	};
};

&uart0 {
	clock-frequency = <25000000>;
	status = "okay";
};

&nand {
	nandcs@0 {
		compatible = "brcm,nandcs";
		reg = <0>;
		nand-ecc-mode = "hw";
		nand-ecc-strength = <8>;
		nand-ecc-step-size = <512>;
		nand-bus-width = <8>;
		brcm,nand-oob-sector-size = <16>;
		#address-cells = <1>;
		#size-cells = <1>;
	};
};

&clcd {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&lcd_24bit_pins>;
	port {
		clcd_pads: endpoint {
			remote-endpoint = <&clcd_panel>;
			arm,pl11x,tft-r0g0b0-pads = <0 8 16>;
		};
	};

	panel {
		compatible = "panel-dpi";
		port {
			clcd_panel: endpoint {
				remote-endpoint = <&clcd_pads>;
			};
		};
	};
};

&mdio_mux {
	status = "okay";
};

&eth0 {
	status = "okay";
};


&esw_ctl {
	status = "okay";
};

&gpio_east {
	/*
	 * East controller starts at 51, so add 51 get real mfio pin.
	 * Set drive strength to max for SCLK pin on port 0 and 1.
	 * On the SVK design the switches and the length of the SCLK
	 * trace are creating clock edge issue (bit errors). We need
	 * to increase the drive strength to over overcome thes issues.
	 */
	i2s0_pad_ctrl: i2s0_pad {
		pins = "mfio-0";
		drive-strength = <16>;
	};

	i2s1_mfio70_pad_ctrl: i2s1_mfio70_pad {
		pins = "mfio-19";
		drive-strength = <16>;
	};
};

&pcie {
	status = "okay";
};

&scp {
	status = "okay";
	scp0: scp@0 {
		brcm,pm-function = "regulator";
		brcm,pm-supply = <&vdd_reg>;
		brcm,pm-regulator-off-in-mem-state;
		brcm,pm-regulator-off-in-off-state;
	};

};

&pwm0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pwm0_mfio035_pins>;
};

&pwm1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pwm1_mfio105_pins>;
};
