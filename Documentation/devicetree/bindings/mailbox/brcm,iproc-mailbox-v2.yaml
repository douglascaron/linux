# SPDX-License-Identifier: GPL-2.0
# Copyright 2020 Broadcom
%YAML 1.2
---
$id: http://devicetree.org/schemas/mailbox/brcm,iproc-mailbox-v2.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Broadcom iProc Mailbox Controller V2

maintainers:
  - Shivaraj Shetty <shivaraj.shetty@broadcom.com>

description:
  The iProc mailbox v2, that has independent set of channels
  to communicate with remote processor(s). The messages are
  placed in memory channels and driver would get interrupt
  for any received data. However it needs to check in each
  channel to find out which processor has sent data on which
  channel. After sending the message, driver polls channel
  type field and the remote clears it after reading the data.

properties:
  compatible:
    enum:
      - brcm,iproc-mailbox-v2

  reg:
    description:
      Address range for mailbox channel.
    maxItems: 1

  interrupts:
    maxItems: 1

  brcm,iproc-mbox:
    allOf:
      - $ref: '/schemas/types.yaml#/definitions/phandle-array'
    description: CRMU DMU with mailbox controller registers.
      - Phandle of syscon block
      - RX register offset within CRMU DMU
      - TX register offset within CRMU DMU

  brcm,iproc-mbox-ch-count:
    $ref: '/schemas/types.yaml#/definitions/uint32'
    description: Number of channels supported by the mailbox.

  "#mbox-cells":
    const: 2
    description:
      Apart from phandle, the two cells would be channel number and channel
      type. Channel type 0 means tx channel and 1 means rx channel.

required:
  - compatible
  - reg
  - interrupts
  - brcm,iproc-mbox
  - brcm,iproc-mbox-ch-count
  - "#mbox-cells"

examples:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/interrupt-controller/irq.h>
    mbox_crmu: mbox {
        compatible = "brcm,iproc-mailbox-v2";
        reg = <0x40000 0x200>;
        interrupts = <GIC_SPI 389 IRQ_TYPE_LEVEL_HIGH>;
        brcm,iproc-mbox = <&crmu_dmu 0x20 0x00>;
        brcm,iproc-mbox-ch-count = <8>;
        #mbox-cells = <2>;
    };
