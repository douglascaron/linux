Broadcom Omega GPIO/PINCONF Controller

Required properties:

- compatible:
    "brcm,omega-pinctrl" for the Omega based GPIO/pinconf controller IP

- reg:
    Define the base and range of the I/O address space that contains SoC
    GPIO/PINCONF controller registers

- ngpios:
    Total number of in-use slots in GPIO/PINCONF controller

- base:
    first pin handled by GPIO/PINCONF controller

- #gpio-cells:
    Must be two. The first cell is the GPIO pin number (within the controller's
    pin space) and the second cell is used for the following:
    bit[0]: polarity (0 for active high and 1 for active low)

- gpio-controller:
    Specifies that the node is a GPIO controller

- interrupts:
    Interrupt ID

- interrupt-controller:
    Specifies that the node is an interrupt controller

- gpio-ranges:
    Specifies the mapping between pinmux controller and gpio pins.
    This requires 4 fields in cells defined as -
    1. Phandle of pinmux controller.
    2. GPIO base pin offset.
    3  Pin-control base pin offset.
    4. number of gpio pins which are linearly mapped from pin base.

The following generic properties as defined in pinctrl-bindings.txt are valid
to specify in a pin configuration subnode:

  pins, bias-disable, bias-pull-down, bias-pull,up, drive-strength,
  input-enable, input-disable, input-schmitt-enable, input-schmitt-disable,
  slew-rate.

The pins on Omega PINCONF controller are divided into two sections: west section
contains mfio pins 0-50; east section contains mfio pins 51-112.

Example:
	gpio_west: pinctrl@285a0000 {
		compatible = "brcm, omega-pinctrl";
		reg = <0x285a0000 0x330>;
		ngpios = <51>;
		base = <0>;
		#gpio-cells = <2>;
		gpio-controller;
		interrupt-controller;
		interrupts = <GIC_SPI 52 IRQ_TYPE_LEVEL_HIGH>;
		gpio-ranges = <&pinmux0 0 0 51>;
		key_pins: key_pins {
			pins = "mfio-21", "mfio-22", "mfio-23", "mfio-24";
			drive-strength = <16>;
			slew-rate = <1>;
		};
	};


	gpio_east: gpio@003d0000 {
		compatible = "brcm, omega-pinctrl";
		reg = <0x003d0000 0x3e0>;
		ngpio = <62>;
		base = <51>;
		#gpio-cells = <2>;
		gpio-controller;
		interrupt-controller;
		interrupts = <GIC_SPI 51 IRQ_TYPE_LEVEL_HIGH>;
		gpio-ranges = <&pinmux1 51 51 62>;
	};


