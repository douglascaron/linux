* Broadcom's iProc CRMU Interrupt Controller

The iProc CRMU Interrupt Controller driver handles interrupts generated by the
Cortex-M0 MCU processor. The driver determines the type of event and forwards
the interrupt to the appropriate IRQ domain.

Required properties:
- compatible: Must be "brcm,iproc-crmu-intc"
- reg: Defines the base address of 1) The MCU to CRMU mailbox and 2) The CRMU to
  iProc interrupt registers.
- interrupts: The IRQ of the mailbox controller.
- #interrupt-cells: Must be 1.
- interrupt-controller: Sets the device as an interrupt controller.
- mboxes: The mailbox channel used to communicate with the mailbox controller.

Example:

Shows how the CRMU GPIO controller configures an IRQ domain and sets the iProc
CRMU Interrupt controller as the interrupt parent. When AON GPIO interrupts are
generated they will be forwared to the CRMU GPIO controller for processing.

	mailbox: mailbox@03024024 {
		compatible = "brcm,iproc-mailbox";
		reg = <0x03024024 0x8>;
		#mbox-cells = <1>;
	};

	iproc_crmu_intc: interrupt-controller@0302402c {
		compatible = "brcm,iproc-crmu-intc";
		reg = <0x0302402c 0x8>,
		      <0x03024058 0xc>;
		interrupts = <GIC_SPI 138 IRQ_TYPE_LEVEL_HIGH>;
		#interrupt-cells = <1>;
		interrupt-controller;
		/* Mailbox channel used by controller. */
		mboxes = <&mailbox 3>;
	};

	gpio_crmu: gpio@03024800 {
		compatible = "brcm,cygnus-crmu-gpio";
		reg = <0x03024800 0x50>,
		      <0x03024008 0x18>;
		ngpios = <6>;
		#gpio-cells = <2>;
		gpio-controller;
		interrupt-controller;
		interrupt-parent = <&iproc_crmu_intc>;
		interrupts = <0>;
		mboxes = <&mailbox 1>;
	};
