/*
 * Copyright 2018 Broadcom
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2, as
 * published by the Free Software Foundation (the "GPL").
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License version 2 (GPLv2) for more details.
 *
 * You should have received a copy of the GNU General Public License
 * version 2 (GPLv2) along with this source code.
 */
#ifndef _BCM_AUDIOH_H
#define _BCM_AUDIOH_H

#define AUDIOH_DAC_CTL				0x0000
#define AUDIOH_ADC_CTL				0x0004
#define AUDIOH_AUDIO_INT_STATUS			0x000c
#define AUDIOH_AUDIO_INTC			0x0010
#define AUDIOH_AUDIO_API			0x0014
#define AUDIOH_STEREO_FIFO_CTRL			0x0020
#define AUDIOH_IHF_FIFO_CTRL			0x0024
#define AUDIOH_VOUT_FIFO_CTRL			0x0028
#define AUDIOH_MIC_SELECT			0x0030
#define AUDIOH_MIC12_FIFO_CTRL			0x0034
#define AUDIOH_MIC34_FIFO_CTRL			0x0038

#define AUDIOH_MIC_CLOCK_SELECT			0x004c
#define AUDIOH_MIC1_FIFO_STATUS			0x0050
#define AUDIOH_MIC2_FIFO_STATUS			0x0054
#define AUDIOH_MIC3_FIFO_STATUS			0x0058
#define AUDIOH_MIC4_FIFO_STATUS			0x005c

#define AUDIOH_ADCPATH_GLOBAL_CTRL		0x0060
#define AUDIOH_MIC12_FILTER_CTRL		0x0074
#define AUDIOH_MIC34_FILTER_CTRL		0x0078
#define AUDIOH_LOOPBACK_CTRL			0x007c

#define AUDIOH_GLOBAL_CLK_EN_ALIGN		0x0090

#define AUDIOH_MIN_PHASE			0x0144

#define AUDIOH_IHF_TONEGEN_CTRL			0x0274
#define AUDIOH_DAC_TONEGEN_X_INITIAL_0		0x0278
#define AUDIOH_DAC_TONEGEN_Y_INITIAL_0		0x027c
#define AUDIOH_DAC_TONEGEN_INIT_PHA0		0x0280
#define AUDIOH_DAC_TONEGEN_PHASE_STEP_0		0x0284
#define AUDIOH_DAC_TONEGEN_X_INITIAL_1		0x0288
#define AUDIOH_DAC_TONEGEN_Y_INITIAL_1		0x028c
#define AUDIOH_DAC_TONEGEN_INIT_PHA1		0x0290
#define AUDIOH_DAC_TONEGEN_PHASE_STEP_1		0x0294
#define AUDIOH_HS_TONEGEN_CTRL			0x0298
#define AUDIOH_DAC_TONEGEN_CTRL			0x029c
#define AUDIOH_DAC_TONEGEN_PHASE_OFFSET_0	0x02a0
#define AUDIOH_DAC_TONEGEN_PHASE_OFFSET_1	0x02a4
#define AUDIOH_EP_TONEGEN_CTRL			0x02bc

#define AUDIOH_AUDIO_ANA_CTL			0x06ec
#define AUDIOH_EP_DAC_SDM_CTL_0			0x06f0
#define AUDIOH_EP_DAC_SDM_CTL_1			0x06f4
#define AUDIOH_EP_DAC_SDM_CTL_2			0x06f8
#define AUDIOH_EP_DAC_SDM_CTL_3			0x06fc
#define AUDIOH_EP_DAC_CTL_0			0x0730
#define AUDIOH_EP_DAC_CTL_1			0x0734
#define AUDIOH_EP_DAC_CTL_2			0x0738
#define AUDIOH_EP_DAC_STAT_0			0x0740
#define AUDIOH_DEM_CTL_0			0x0744

#define AUDIOH_HS_DEM_CTRL			0x0790
#define AUDIOH_HS_DSM1				0x0794
#define AUDIOH_HS_DSM2				0x0798
#define AUDIOH_HS_DRV_PUP0			0x07a0
#define AUDIOH_HS_DRV_PUP1			0x07a4
#define AUDIOH_HS_DRV_PUP2			0x07a8
#define AUDIOH_HS_DRV_PUP3			0x07ac
#define AUDIOH_HS_DRV_TRIM			0x07b0
#define AUDIOH_HS_DRV_OUTPUT			0x07b4
#define AUDIOH_HS_DRV_SPARE			0x07b8
#define AUDIOH_HS_CP_CTRL			0x07bc
#define AUDIOH_HS_DAC_CTL			0x07c0
#define AUDIOH_HS_POP_CTRL1			0x07c4
#define AUDIOH_HS_POP_CTRL2			0x07c8
#define AUDIOH_HS_POP_CTRL3			0x07cc
#define AUDIOH_HS_POP_CTRL4			0x07d0
#define AUDIOH_HS_POP_CTRL5			0x07d4

#define AUDIOH_SDT_CTL				0x0800
#define AUDIOH_SDT_CURRENT_GAIN			0x0804
#define AUDIOH_SDT_CTRL_2			0x0808
#define AUDIOH_SDT_COEF_ADDR			0x080c
#define AUDIOH_SDT_COEF_DATA			0x0810
#define AUDIOH_SDT_CTRL_3			0x0814
#define AUDIOH_SDT_OUTPUTFIFO			0x0818
#define AUDIOH_SDT_CTRL_4			0x081c

#define AUDIOH_IHF_DEM_CTRL			0x0990
#define AUDIOH_IHF_DSM1				0x0994
#define AUDIOH_IHF_DSM2				0x0998
#define AUDIOH_IHF_CTL				0x099c

#define AUDIOH_ADC1_CFG				0x0a28
#define AUDIOH_ADC1_CFG2			0x0a2c
#define AUDIOH_ADC2_CFG				0x0a30
#define AUDIOH_ADC2_CFG2			0x0a34
#define AUDIOH_CAPTURE_FILT_MIC1_CFG		0x0a38
#define AUDIOH_CAPTURE_FILT_MIC2_CFG		0x0a3c
#define AUDIOH_CAPTURE_FILT_MIC3_CFG		0x0a40
#define AUDIOH_CAPTURE_FILT_MIC4_CFG		0x0a44
#define AUDIOH_EP_DAC2_CTL_0			0x0a48
#define AUDIOH_EP_DAC2_CTL_1			0x0a4c
#define AUDIOH_DVED_CTL1			0x0b08
#define AUDIOH_DMIC_CLK_GATE			0x0b0c


#define CODEC_IOP_IN_I2S_STREAM_CFG		0x9000
#define CODEC_IOP_IN_I2S_CFG			0x9004
#define CODEC_IOP_OUT_I2S_STREAM_CFG		0xa000
#define CODEC_IOP_OUT_I2S_CFG			0xa004

#define CODEC_TDM_MODE_SELECT			0xb000
#define CODEC_TDM_PLAYOUT_PATH_ENABLE		0xb004
#define CODEC_TDM_PLAYOUT_SLOT_FIFO_MAPPING	0xb008
#define CODEC_TDM_CAPTURE_PATH_ENABLE		0xb00c
#define CODEC_TDM_CAPTURE_SLOT_FIFO_MAPPING	0xb010
#define CODEC_TDM_CAPTURE_SLOT_FIFO_RATE	0xb014
#define CODEC_TDM_PLAYOUT_PATH_SW_RESET		0xb020
#define CODEC_TDM_CAPTURE_PATH_SW_RESET		0xb024
#define CODEC_TDM_CAPTURE_SLOTS_ACTIVE		0xb03c

#define AUDIOH_MAX_REGMAP_REG	CODEC_TDM_CAPTURE_SLOTS_ACTIVE

/*******************  Bit definitions *********************************/

/* AUDIOH_DAC_CTL (0x0000) */
#define AUDIOH_DAC_CTL_HSR_ENABLE  0
#define AUDIOH_DAC_CTL_HSL_ENABLE  1
#define AUDIOH_DAC_CTL_IHF_ENABLE  3
#define AUDIOH_DAC_CTL_EP_ENABLE   4
#define AUDIOH_DAC_CTL_HS_MUTE     8
#define AUDIOH_DAC_CTL_IHF_MUTE    9
#define AUDIOH_DAC_CTL_EP_MUTE    10
#define AUDIOH_DAC_CTL_HS_SIDETONE_EN   12
#define AUDIOH_DAC_CTL_IHF_SIDETONE_EN  13
#define AUDIOH_DAC_CTL_EP_SIDETONE_EN   14

/* AUDIOH_ADC_CTL (0x0004) */
#define AUDIOH_ADC_CTL_MIC1_ENABLE  0
#define AUDIOH_ADC_CTL_MIC2_ENABLE  1
#define AUDIOH_ADC_CTL_MIC3_ENABLE  2
#define AUDIOH_ADC_CTL_MIC4_ENABLE  3
#define AUDIOH_ADC_CTL_SIDETONE_EN  7

/* Playback FIFO_CTRL (0x020, 0x024, 0x028) */
#define PLAYBACK_FIFO_CLEAR     7
#define PLAYBACK_FIFO_24BIT    13

/* AUDIOH_MIC_SELECT  (0x0030) */
#define AUDIOH_MIC_SELECT_FIFO1     0
#define AUDIOH_MIC_SELECT_FIFO2     4
#define AUDIOH_MIC_SELECT_FIFO3     8
#define AUDIOH_MIC_SELECT_FIFO4    12
#define AUDIOH_MIC_SELECT_SDT      20

/* Capture FIFO_CTRL (0x034, 0x038).  Fifo are paired in each reg */
#define CAPTURE_FIFO1_CLEAR     7
#define CAPTURE_FIFO1_24BIT    13

#define CAPTURE_FIFO2_CLEAR    24
#define CAPTURE_FIFO2_24BIT    30

#define CAPTURE_FIFO3_CLEAR     7
#define CAPTURE_FIFO3_24BIT    13

#define CAPTURE_FIFO4_CLEAR    24
#define CAPTURE_FIFO4_24BIT    30

/* AUDIOH_MIC_CLOCK_SEL (0x004c) */
#define DMIC12_CLK_SELECT       0
#define DMIC12_CLK_SELECT_MASK  (0x3 << DMIC12_CLK_SELECT)

#define DMIC34_CLK_SELECT       2
#define DMIC34_CLK_SELECT_MASK  (0x3 << DMIC34_CLK_SELECT)
#define DMIC_CLK_SELECT_650   0
#define DMIC_CLK_SELECT_1300  1
#define DMIC_CLK_SELECT_2600  2
#define DMIC_CLK_SELECT_3250  3

/* AUDIOH_GLOBAL_CLK_EN_ALIGN (0x0090) */
#define AUDIOH_GLOBAL_CLK_EN_ALIGN_SOFT_RESET    4

/*
 * AUDIOH_IHF_TONEGEN_CTRL (0x0274)
 * AUDIOH_HS_TONEGEN_CTRL  (0x0298)
 * AUDIOH_EP_TONEGEN_CTRL  (0x02bc)
 */
#define TONEGEN_CTRL_OUTSEL      14
#define TONEGEN_CTRL_ENABLE      15
#define TONEGEN_CTRL_SCALE       16
#define TONEGEN_CTRL_SCALE_MASK \
	GENMASK(TONEGEN_CTRL_SCALE + 15, TONEGEN_CTRL_SCALE)  /* Bits 16:31 */

/* AUDIOH_DAC_TONEGEN_PHASE_STEP_0 (0x0284) */
/* AUDIOH_DAC_TONEGEN_PHASE_STEP_1 (0x0294) */
#define TONEGEN_PHASE_STEP        0
#define TONEGEN_PHASE_STEP_MASK \
	GENMASK(TONEGEN_PHASE_STEP + 25, TONEGEN_PHASE_STEP)  /* Bits 0:25 */

/* AUDIOH_DAC_TONEGEN_CTRL (0x029c) */
#define DAC_TONEGEN_Enable0  10
#define DAC_TONEGEN_Enable1  11

/* AUDIOH_AUDIO_ANA_CTL (0x06ec) */
#define ANA_CTL_CLKRESET   2

/* AUDIOH_EP_DAC_CTL_0 (0x0730) */
#define EP_DAC_CTL_0_PUP_V21    28       /* Global bias */

/* AUDIOH_EP_DAC_CTL_1 (0x0734) */
#define EP_DAC_CTL_1_FINAL_EXT          4
#define EP_DAC_CTL_1_PUP_DRV            6
#define EP_DAC_CTL_1_RESET              7
#define EP_DAC_CTL_1_PUP_EXT_EN         8
#define EP_DAC_CTL_1_POPCLICK_CTRL_EN   9
#define EP_DAC_CTL_1_POWERDOWN          15

/* AUDIOH_HS_DRV_PUP1 (0x07a4) */
#define HS_DRV_PUP1_PUP_L      0
#define HS_DRV_PUP1_PUP_R      1
#define HS_DRV_PUP1_SC_PUP_L  30
#define HS_DRV_PUP1_SC_PUP_R  31

/* AUDIOH_HS_DRV_TRIM (0x07b0) */
#define HS_DRV_TRIM_DRV_AMP_MASK  (BIT(10) | BIT(11) | BIT(12))

/* AUDIOH_HS_CP_CTRL (0x07bc) */
#define HS_CP_CTRL_VNC_MASK  (BIT(17) | BIT(18))
#define HS_CP_CTRL_VPC_MASK  (BIT(22) | BIT(23))

/* AUDIOH_HS_DAC_CTL (0x07c0) */
#define HS_DAC_CTL_CLKRESET  2

/* AUDIOH_IHF_CTL (0x099c) */
#define AUDIOH_IHF_CTL_CLKRESET		3
#define AUDIOH_IHF_CTL_PUP_L		5
#define AUDIOH_IHF_CTL_DRV_BIAS_PUP_L	7
#define AUDIOH_IHF_CTL_DAC_PU_1P8_L	9

/* AUDIOH_ADCX_CFG  (0x0a28 and 0xa30) */
#define ADC_CFG_MIC_SEL  14
#define ADC_CFG_PGA_GAIN 10

/* AUDIOH_ADC1_CFG2 (0x0a2c)  and  AUDIOH_ADC1_CFG2 (0xa34) */
#define ADC_CFG2_ADC_PD      2
#define ADC_CFG2_ADC_RESET   3
#define ADC_CFG2_PGA_PD      8

/* AUDIOH_CAPTURE_FILT_MICx_CFG (0x0a38 .. 0x044)*/
#define MIC_FILTER_ORDER   14
#define MIC_FILTER_ORDER_MASK  0xf
#define MIC_FILTER_ORDER_BYPASS  8

/* AUDIOH_EP_DAC2_CTL_1 (0x0a48) */
#define EP_DAC2_CTL_1_POPCLICK_CTRL_EN   1
#define EP_DAC2_CTL_1_PUP_DRV            2
#define EP_DAC2_CTL_1_PUP_EXT_EN         3
#define EP_DAC2_CTL_1_FINAL_EXT         19
#define EP_DAC2_CTL_1_POWERDOWN         20

/* AUDIOH_DVED_CTL1 (0x0b08) */
#define USE_DVED_CLK_FOR_DMIC1     26
#define USE_DVED_CLK_FOR_DMIC2     27

/* AUDIOH_DMIC_CLK_GATE (0x0b0c) */
#define DMIC_CLK_GATE_1AND2   0
#define DMIC_CLK_GATE_3AND4   1

/* CODEC_IOP_IN_I2S_STREAM_CFG (0x9000) */
#define IOP_IN_I2S_STREAM_CFG_ENABLE   31

/* CODEC_IOP_OUT_I2S_STREAM_CFG (0xa000) */
#define IOP_OUT_I2S_STREAM_CFG_ENABLE  31

/* CODEC_IOP_OUT_I2S_CFGA (0x9004) */
#define CODEC_I2S_IN_CFG_DATA_ALIGNMENT   2
#define CODEC_I2S_IN_CFG_BITS_PER_SAMPLE  5		/* 5 bits, 5-9 */
#define CODEC_I2S_IN_CFG_BITS_PER_SAMPLE_MASK \
		GENMASK(CODEC_I2S_IN_CFG_BITS_PER_SAMPLE + 4, \
			CODEC_I2S_IN_CFG_BITS_PER_SAMPLE)
#define CODEC_I2S_IN_CFG_BITS_PER_SLOT   10
#define CODEC_I2S_IN_CFG_VALID_SLOT      12  /* 4 bits, 12-15 */
#define CODEC_I2S_IN_CFG_VALID_SLOT_MASK \
		GENMASK(CODEC_I2S_IN_CFG_VALID_SLOT + 3, \
			CODEC_I2S_IN_CFG_VALID_SLOT)
#define CODEC_I2S_IN_CFG_SCLKS_PER_1FS_DIV32 25  /* 4 bits, 25-28 */
#define CODEC_I2S_IN_CFG_SCLKS_PER_1FS_DIV32_MASK \
		GENMASK(CODEC_I2S_IN_CFG_SCLKS_PER_1FS_DIV32 + 3, \
			CODEC_I2S_IN_CFG_SCLKS_PER_1FS_DIV32)
#define CODEC_I2S_IN_CFG_SLAVE_MODE      30
#define CODEC_I2S_IN_CFG_TDM_MODE        31


/* CODEC_IOP_OUT_I2S_CFGA (0xa004) */
#define CODEC_I2S_OUT_CFG_LRCK_POLARITY   0
#define CODEC_I2S_OUT_CFG_SCLK_POLARITY   1
#define CODEC_I2S_OUT_CFG_DATA_ALIGNMENT  2
#define CODEC_I2S_OUT_CFG_BITS_PER_SAMPLE 5		/* 5 bits, 5-9 */
#define CODEC_I2S_OUT_CFG_BITS_PER_SAMPLE_MASK \
		GENMASK(I2S_OUT_CFG_BITS_PER_SAMPLE + 4, \
			I2S_OUT_CFG_BITS_PER_SAMPLE)
#define CODEC_I2S_OUT_CFG_BITS_PER_SLOT  10
#define CODEC_I2S_OUT_CFG_VALID_SLOT     12		/* 4 bits, 12-15 */
#define CODEC_I2S_OUT_CFG_VALID_SLOT_MASK \
		GENMASK(I2S_OUT_CFG_VALID_SLOT + 3, \
			I2S_OUT_CFG_VALID_SLOT)
#define CODEC_I2S_OUT_CFG_FSYNC_WIDTH    16		/* 9 bits, 16-24 */
#define CODEC_I2S_OUT_CFG_FSYNC_WIDTH_MASK \
		GENMASK(I2S_OUT_CFG_FSYNC_WIDTH + 8, \
			I2S_OUT_CFG_FSYNC_WIDTH)
#define CODEC_I2S_OUT_CFG_SCLKS_PER_1FS_DIV32 25  /* 4 bits, 25-28 */
#define CODEC_I2S_OUT_CFG_SCLKS_PER_1FS_DIV32_MASK \
		GENMASK(CODEC_I2S_OUT_CFG_SCLKS_PER_1FS_DIV32 + 3, \
			CODEC_I2S_OUT_CFG_SCLKS_PER_1FS_DIV32)
#define CODEC_I2S_OUT_CFG_SLAVE_MODE     30
#define CODEC_I2S_OUT_CFG_TDM_MODE       31

/* CODEC_TDM_MODE_SELECT (0xb000) */
#define CODEC_TDM_MODE_SELECT_MASTER        0
#define CODEC_TDM_MODE_SELECT_TDM           1
#define CODEC_TDM_MODE_SELECT_BITCLK_MULT   2     /* 10 bits, 2-11 */
#define CODEC_TDM_MODE_SELECT_BITCLK_MULT_MASK \
		GENMASK(CODEC_TDM_MODE_SELECT_BITCLK_MULT + 9, \
			CODEC_TDM_MODE_SELECT_BITCLK_MULT)

/* CODEC_TDM_PLAYOUT_PATH_ENABLE (0xb004) */
#define CODEC_TDM_PLAYOUT_PATH_GLOBAL_ENABLE     0
#define CODEC_TDM_PLAYOUT_PATH_STEREO_HS_ENABLE  1
#define CODEC_TDM_PLAYOUT_PATH_IHF_ENABLE        2
#define CODEC_TDM_PLAYOUT_PATH_EP_ENABLE         3

/* CODEC_TDM_CAPTURE_PATH_ENABLE (0xb00c) */
#define CODEC_TDM_CAPTURE_PATH_ENABLE_GLOBAL  0
#define CODEC_TDM_CAPTURE_PATH_ENABLE_FIFO1   1
#define CODEC_TDM_CAPTURE_PATH_ENABLE_FIFO2   2
#define CODEC_TDM_CAPTURE_PATH_ENABLE_FIFO3   3
#define CODEC_TDM_CAPTURE_PATH_ENABLE_FIFO4   4

/* CODEC_TDM_CAPTURE_SLOTS_ACTIVE (0xb03c) */
#define CODEC_TDM_CAPTURE_SLOT0_ACTIVE  0
#define CODEC_TDM_CAPTURE_SLOT1_ACTIVE  1
#define CODEC_TDM_CAPTURE_SLOT2_ACTIVE  2
#define CODEC_TDM_CAPTURE_SLOT3_ACTIVE  3

/***************************************************************************
 * Regs for CRMU region
 */
#define CRMU_CLK_GATE_CTRL			0x088c
#define CRMU_CODEC_CLK_CTRL			0x0894
#define CRMU_CODEC_OSC_CONTROL0			0x08c4
#define CRMU_CODEC_OSC_CONTROL1			0x08c8
#define CRMU_CODEC_OSC_CONTROL2			0x08cc
#define CRMU_CODEC_OSC_CONTROL3			0x08d0
#define CRMU_CODEC_OSC_CONTROL4			0x08d4
#define CRMU_CODEC_RASCAL_CONTROL0		0x08d8
#define CRMU_AUD_LOGIC_POWER_CONTROL		0x0940

#define CDRU_MISC_REG				0x1100
#define CDRU_AUDIO_ANA_TEST_BUS			0x1118

#define CRMU_AUXMIC_DET_AUXMIC_AUXMIC6		0xd014
#define CRMU_AUXMIC_DET_AUXMIC_AUXMIC43		0xd0c4
#define CRMU_AUXMIC_DET_MICBIAS1_CTL		0xd164
#define CRMU_AUXMIC_DET_MICBIAS2_CTL		0xd168


/* CRMU_CLK_GATE_CTRL (0x088c) */
#define CRMU_CODEC_CLK_GATE    12

/* CRMU_CODEC_CLK_CTRL (0x0894) */
#define CODEC_CLK_CTRL_AUX_MICRESETN   8
#define CODEC_CLK_CTRL_AUX_MICCLKEN    12

/* CRMU_CODEC_OSC_CONTROL0 (0x08c4) */
#define OSC_CAL_START      12

/* CRMU_CODEC_OSC_CONTROL1 (0x08c8) */
#define OSC_RESET         16
#define OSC_RESET_DIG_FLL 20
#define OSC_PWRUP         24
#define OSC_VCO_EN        28

/* CRMU_CODEC_OSC_CONTROL2 (0x08cc) */
#define OSC_VCO_DIGCLKOUT_EN          8
#define OSC_XTAL_DIGCLKOUT_DISABLE   12
#define OSC_CLKGEN_BYP_AUD           16
#define OSC_CLKGEN_DONT_BYP_DIG      20
#define OSC_EN_26M_IN                24

/* CRMU_CODEC_OSC_CONTROL4 (0x08d4) */
#define STAT_OSC_CAL_DONE  0
#define STAT_OSC_LOCK      4

/* CODEC_RASCAL_CONTROL0 (0x08d8) */
#define CRMU_RESCAL_CFG_RESCAL_RSTB  0
#define CRMU_RESCAL_CFG_RESCAL_PWRDN 4

/* CRMU_AUD_LOGIC_POWER_CONTROL	(0x0940) */
#define CODEC_ISO_EN                   20

/* CDRU_MISC_REG (0x1100) */
#define CDRU_MISC_CODEC_CEC_APB_RESETN	8
#define CDRU_MISC_CODEC_RESETN		12

/* CDRU_AUDIO_ANA_TEST_BUS (0x1118) */
#define STAT_RESCAL_DONE    0

/* CRMU_AUXMIC_DET_MICBIAS1_CTL (0xd164) and MICBIAS2_CTL (0xd168) */
#define MICBIAS_PWRUP         3
#define MICBIAS_VB_CTRL       4
#define MICBIAS_VB_CTRL_MASK  \
	GENMASK(MICBIAS_VB_CTRL + 2, MICBIAS_VB_CTRL) /* bits 4,5, and 6 */

/* CRMU_AUXMIC_DET_AUXMIC_AUXMIC43 (0xd0c4) */
#define AUXMIC_MICBIAS_PWRUP       3

#endif

