/*
 * Copyright (C) 2017 Broadcom
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation version 2.
 *
 * This program is distributed "as is" WITHOUT ANY WARRANTY of any
 * kind, whether express or implied; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef __BCM281XX_NANDREGS_H__
#define __BCM281XX_NANDREGS_H__

/*start of nand bch register defines */
#define NAND_BCH_CTRL_OFFSET				0x00000900
#define NAND_BCH_CTRL_BUS_WIDTH_SHIFT			3
#define NAND_BCH_CTRL_BUS_WIDTH_MASK			0x00000008
#define NAND_BCH_CTRL_ECC_RD_EN_MASK			0x00000002
#define NAND_BCH_CTRL_ECC_WR_EN_MASK			0x00000001

#define NAND_BCH_STATUS_OFFSET				0x00000904
#define NAND_BCH_STATUS_CORR_ERR_MASK			0x00000001
#define NAND_BCH_STATUS_NB_CORR_ERR_SHIFT		4
#define NAND_BCH_STATUS_NB_CORR_ERR_MASK		0x000003f0
#define NAND_BCH_STATUS_UNCORR_ERR_MASK			0x00000002

#define NAND_BCH_ERR_LOC_OFFSET				0x00000958
#define NAND_BCH_ERR_LOC_ERR_LOC_SHIFT			0
#define NAND_BCH_ERR_LOC_ERR_LOC_MASK			0x00003fff

#define NAND_BCH_NK_OFFSET				0x00000908
#define NAND_BCH_NK_K_SHIFT				16
#define NAND_BCH_NK_K_MASK				0x3fff0000
#define NAND_BCH_NK_N_SHIFT				0
#define NAND_BCH_NK_N_MASK				0x00003fff
#define NAND_BCH_NK_RESERVED_MASK			0xc000c000

#define NAND_BCH_T_OFFSET				0x0000090C
#define NAND_BCH_T_T_SHIFT				0
#define NAND_BCH_T_T_MASK				0x0000003f

#define NAND_BCH_WR_ECC0_OFFSET				0x00000910
/*End of nand bch registers */

/*start nand controller register defination*/
#define NAND_COMMAND_OFFSET				0x00000000
#define NAND_COMMAND_VALID_MASK				0x00010000

#define NAND_ADDRESS_OFFSET				0x00000004
#define NAND_ATTRI0_OFFSET				0x00000008
#define NAND_ATTRI1_OFFSET				0x0000000c
#define NAND_BANK_OFFSET				0x00000010
#define NAND_CONTROL_OFFSET				0x00000014

#define NAND_CONTROL_DMA_MODE_MASK			0x00000002
#define NAND_CONTROL_DMA_STARTSTOP_MASK			0x00004000
#define NAND_CONTROL_ECC_BYP_MASK			0x00000040
#define NAND_CONTROL_ECC_HM_MASK			0x00000020
#define NAND_CONTROL_ECC_RS_MASK			0x00000010
#define NAND_CONTROL_RESETALL_MASK			0x80000000
#define NAND_CONTROL_TRAN_DIR_MASK			0x00000008

#define NAND_CONFIG0_OFFSET				0x00000018
#define NAND_CONFIG0_AUX_DATA_TYPE_SHIFT		6
#define NAND_CONFIG0_AUX_DATA_TYPE_MASK			0x000000c0
#define NAND_CONFIG0_DATA_WIDTH_SHIFT			0
#define NAND_CONFIG0_DATA_WIDTH_MASK			0x00000001

#define NAND_CONFIG1_OFFSET				0x0000001c
#define NAND_CONFIG2_OFFSET				0x00000080

#define NAND_DMAINT0_OFFSET				0x00000084
#define NAND_DMAINT1_OFFSET				0x00000088
#define NAND_DMAINT2_OFFSET				0x0000008c
#define NAND_DMAINT3_OFFSET				0x00000090
#define NAND_DMAINT0_ENABLE_MASK			0x00008000

#define NAND_MRESP_OFFSET				0x0000040c
#define NAND_MRESP_NANDSTATUS_SHIFT			0
#define NAND_MRESP_NANDSTATUS_MASK			0x000000ff

#define NAND_IRQCTRL_OFFSET				0x0000002c
#define NAND_IRQSTATUS_OFFSET				0x00000030
#define NAND_IRQSTATUS_BCH_ERR_RDY_SHIFT		26
#define NAND_IRQSTATUS_BCH_ERR_RDY_MASK			0x04000000
#define NAND_IRQSTATUS_BCH_WR_ECC_VALID_SHIFT		25
#define NAND_IRQSTATUS_BCH_WR_ECC_VALID_MASK		0x02000000
#define NAND_IRQSTATUS_BCH_RD_ECC_VALID_SHIFT		24
#define NAND_IRQSTATUS_BCH_RD_ECC_VALID_MASK		0x01000000
#define NAND_IRQSTATUS_BANK_CMPL_IRQ_SHIFT		16
#define NAND_IRQSTATUS_BANK_ERR_IRQ_SHIFT		8
#define NAND_IRQSTATUS_RB_IRQ_SHIFT			4
#define NAND_IRQSTATUS_DMA_CMPL_IRQ_MASK		0x00000002
#define NAND_IRQSTATUS_DMA_ERROR_ENABLE_MASK		0x00000001

#define NAND_PRDBASE_OFFSET				0x00000034

#define NAND_STATUS_OFFSET				0x00000020
#define NAND_STATUS_DMA_STATUS_SHIFT			2
#define NAND_STATUS_DMA_STATUS_MASK			0x00000004

#define NAND_REG_UCODE_START_OFFSET		0xf000
#define NAND_REG_UCODE_END_OFFSET		0x10000
/*End of nand controller register definition*/

#define NAND_CONTROL_NORMAL_CONFIG	\
	(\
	 NAND_CONTROL_DMA_MODE_MASK | \
	 NAND_CONTROL_ECC_BYP_MASK | \
	 NAND_CONTROL_ECC_HM_MASK | \
	 NAND_CONTROL_ECC_RS_MASK)

/* Auxiliary data type */
#define NAND_CONFIG0_AUX_DATA_TYPE_2B	0x0
#define NAND_CONFIG0_AUX_DATA_TYPE_4B	0x1
#define NAND_CONFIG0_AUX_DATA_TYPE_8B	0x2

/* Data bus width */
#define NAND_CONFIG0_DATA_WIDTH_8	0x0
#define NAND_CONFIG0_DATA_WIDTH_16	0x1

/* Transfer direction */
#define NAND_DIRECTION_FROM_NAND	0x0
#define NAND_DIRECTION_TO_NAND		0x1

/**
 * CONFIG0_NORMAL	0x00000000
 * Aux_data_type:	0x0 (2 bytes)
 * Data_width:		0x0 (8 bits)
 */
#define NAND_CONFIG0_NORMAL	\
	(\
	 ((NAND_CONFIG0_AUX_DATA_TYPE_2B << NAND_CONFIG0_AUX_DATA_TYPE_SHIFT) &\
	NAND_CONFIG0_AUX_DATA_TYPE_MASK) | \
	 ((NAND_CONFIG0_DATA_WIDTH_8 << NAND_CONFIG0_DATA_WIDTH_SHIFT) & \
	NAND_CONFIG0_DATA_WIDTH_MASK)\
	 )

#endif
